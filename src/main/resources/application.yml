spring:
  application:
    name: CloudBackend

  config:
    import: optional:file:./koppa.properties


  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  data:
    jdbc:
      dialect: postgresql

  jpa:
    hibernate:
      ddl-auto: create-drop


  security:
    oauth2:
      client:
        registration:
          github:
            client-name: github
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
          discord:
            client-name: discord
            provider: discord
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/discord
            authorization-grant-type: authorization_code
            scope:
              - identify
              - email
        provider:
          discord:
            authorization-uri: https://discord.com/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: id
  profiles:
    active: test

logging:
  level:
    root: info

aws:
  access:
    key: ${AWS_ACCESS_KEY}
  secret:
    key: ${AWS_SECRET_KEY}
  bucket:
    name: ${AWS_BUCKET_NAME}
server:
  port: ${SERVER_PORT:8080}
